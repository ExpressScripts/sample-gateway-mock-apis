# This workflow will check the commit history for emails having a public domain.
# Only the users.noreply.github.com domain should be present

name: "Private Email Policy"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs: 
  check-commits:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    
    - name: Fetch Commits
      shell: bash
      run: git fetch --prune --unshallow
    
    - name: Private Email Policy Violations
      shell: bash
      run: |
        echo "Checking for any email addresses that are NOT '@users.noreply.github.com' or 'noreply@github.com'"
        echo
        echo "Checking author email addresses..."
        echo
        read AUTHOR_EMAIL_ISSUE_CT <<< $(git log --format='%ae' | grep -c -v '@users.noreply.github.com\|noreply@github.com')
        echo "${AUTHOR_EMAIL_ISSUE_CT} public email addresses were found in commit history "
        echo
        if [[ $AUTHOR_EMAIL_ISSUE_CT -gt 0 ]]
        then
          echo "*** Policy Violations ***"
          git log --format='%h %an %ae' | grep -v '@users.noreply.github.com\|noreply@github.com'
          echo "*************************"
        fi
        echo
        echo
        echo "Checking committer email addresses..."
        echo
        read COMMITTER_EMAIL_ISSUE_CT <<< $(git log --format='%ce' | grep -c -v '@users.noreply.github.com\|noreply@github.com')
        echo "${COMMITTER_EMAIL_ISSUE_CT} public email addresses were found in commit history "
        echo
        if [[ $COMMITTER_EMAIL_ISSUE_CT -gt 0 ]]
        then
          echo "*** Policy Violations ***"
          git log --format='%h %cn %ce' | grep -v '@users.noreply.github.com\|noreply@github.com'
          echo "*************************"
        fi
        echo
        exit $(($AUTHOR_EMAIL_ISSUE_CT + $COMMITTER_EMAIL_ISSUE_CT))

